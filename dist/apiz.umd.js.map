{"version":3,"file":"apiz.umd.js","sources":["../src/core.ts","../src/querystring.ts","../src/index.ts"],"sourcesContent":["export type HTTPMethodUpperCase = 'GET' | 'POST' | 'HEAD' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS';\n\nexport type HTTPMethodLowerCase = 'get' | 'post' | 'head' | 'put' | 'patch' | 'delete' | 'options';\n\nexport type HTTPMethod = HTTPMethodUpperCase | HTTPMethodLowerCase;\n\ninterface APIInfoWithURL<ContentType, Meta> {\n\turl: string;\n\tmethod?: HTTPMethod;\n\ttype?: ContentType;\n\tmeta?: Meta;\n}\n\ninterface APIInfoWithPath<ContentType, Meta> {\n\tbaseURL?: string;\n\tpath: string;\n\tmethod?: HTTPMethod;\n\ttype?: ContentType;\n\tmeta?: Meta;\n}\n\nexport type APIInfo<ContentType = any, Meta = any> =\n\t| APIInfoWithURL<ContentType, Meta>\n\t| APIInfoWithPath<ContentType, Meta>;\n\nexport interface APIGroup<\n\tT extends Record<string, APIInfo<any, any>> = Record<string, APIInfo<any, any>>\n> {\n\tbaseURL?: string;\n\tapis: T;\n}\n\nexport interface ClientRequestOptions<RawRequestOptions, ContentType, Meta> {\n\turl: string;\n\tname: string;\n\tmeta?: Meta;\n\toptions?: RawRequestOptions;\n\tbody?: any;\n\tparams?: Record<string, string>;\n\tquery?: string | Record<string, any>;\n\theaders?: Record<string, any>;\n\ttype?: ContentType;\n\thandleError?: boolean;\n}\n\nexport type APIzClientRequest<RawRequestOptions, ContentType, Meta> = (\n\toptions: ClientRequestOptions<RawRequestOptions, ContentType, Meta>\n) => Promise<any>;\n\nexport type APIzClient<\nRawRequestOptions,\nContentType,\nMeta,\nMethod extends HTTPMethodLowerCase = HTTPMethodLowerCase\n> = {[k in Method]: APIzClientRequest<RawRequestOptions, ContentType, Meta>};\n\nexport type Serialize2QueryString = (obj: any) => string;\n\nexport interface APIzOptions<\n\tRawRequestOptions,\n\tContentType,\n\tMeta,\n\tMethod extends HTTPMethodLowerCase = HTTPMethodLowerCase\n> {\n\tbaseURL?: string;\n\tclient?: APIzClient<RawRequestOptions, ContentType, Meta, Method>;\n\timmutable?: boolean;\n\tparamRegex?: RegExp;\n\tquerystring?: Serialize2QueryString;\n}\n\nexport interface GlobalAPIzOptions<\n\tRawRequestOptions,\n\tContentType,\n\tMeta,\n\tMethod extends HTTPMethodLowerCase = HTTPMethodLowerCase\n> {\n\tclient?: APIzClient<RawRequestOptions, ContentType, Meta, Method>;\n\tparamRegex?: RegExp;\n\tdefaultType?: ContentType;\n\timmutable?: boolean;\n\treset?: boolean;\n\tquerystring?: (obj: any) => string;\n}\n\ntype Callable = (...args: Array<any>) => any;\n\ninterface ParsedAPIInfo<RawRequestOptions, ContentType, Meta, Method extends HTTPMethodLowerCase> {\n\turl: string;\n\tbaseURL: string;\n\tpath: string;\n\tname: string;\n\tmeta?: Meta;\n\tmethod: HTTPMethodUpperCase;\n\tmethodLowerCase: Method;\n\ttype?: ContentType;\n\tregex: RegExp;\n\tquerystring: Serialize2QueryString;\n\tinit: boolean;\n\tclient: APIzClient<RawRequestOptions, ContentType, Meta, Method>;\n}\n\ntype ContentTypeFrom<R> = R extends Record<string, APIInfo<infer C, infer M>>\n\t? C extends unknown\n\t\t? any\n\t\t: C\n\t: never;\n\ntype ProxyGroup<RawRequestOptions, T extends Record<string, APIInfo<any, any>>> = {\n\t[k in keyof T]: RequestWithoutThis<RawRequestOptions, ContentTypeFrom<T>>\n};\n\nexport type APIzInstance<\nRawRequestOptions = any,\nT extends Record<string, APIInfo<any, any>> = Record<string, APIInfo<any, any>>,\nMethod extends HTTPMethodLowerCase = HTTPMethodLowerCase\n> = Omit<ProxyGroup<RawRequestOptions, T>, 'remove' | 'add'> & {\n\tremove: (name: string) => APIzInstance<RawRequestOptions, T, Method>;\n\tadd: (\n\t\tname: string,\n\t\tapiInfo: T extends Record<string, infer I>\n\t\t? I extends APIInfo<infer C, infer M>\n\t\t? APIInfo<C extends unknown ? any : C, M extends unknown ? any : M>\n\t\t: never\n\t\t: never\n\t) => APIzInstance<RawRequestOptions, T, Method>;\n};\n\nexport interface APIzRequestOptions<ContentType> {\n\tbody?: any;\n\tparams?: Record<string, string>;\n\tquery?: string | Record<string, any>;\n\theaders?: Record<string, any>;\n\ttype?: ContentType;\n\thandleError?: boolean;\n}\n\nexport type RequestWithoutThis<RawRequestOptions, ContentType> = (\n\toptions?: APIzRequestOptions<ContentType> | RawRequestOptions,\n\tisRawOption?: boolean\n) => Promise<any>;\n\ntype Request<RawRequestOptions, ContentType, Meta, Method extends HTTPMethodLowerCase> = \n\t((\n\t\tthis: ParsedAPIInfo<RawRequestOptions, ContentType, Meta, Method>,\n\t\toptions?: APIzRequestOptions<ContentType> | RawRequestOptions,\n\t\tisRawOption?: boolean\n) => Promise<any>);\n\nexport interface APIzRequest<RawRequestOptions, ContentType, Meta> {\n\t(options: APIzRequestOptions<ContentType> | RawRequestOptions, isRawOption?: boolean): Promise<\n\t\tany\n\t>;\n\treadonly url: string;\n\treadonly method: HTTPMethodUpperCase;\n\treadonly meta: Meta;\n\treadonly type: ContentType;\n}\n\nconst toString = ((Map as unknown) as () => any).call.bind(Object.prototype.toString);\nconst isStr = (s: any): s is string => s && typeof s === 'string';\nconst isFn = (f: any): f is Callable => typeof f === 'function';\nconst isObj = (o: any): boolean => toString(o) === '[object Object]';\nconst isEnumerable = ((Map as unknown) as () => any).call.bind(\n\tObject.prototype.propertyIsEnumerable\n);\n\nlet globalQuerystring: Serialize2QueryString | undefined,\n\tglobalParamRegex: RegExp | undefined,\n\tglobalIsArgsImmutable: boolean | undefined = false,\n\tglobalClient: APIzClient<any, any, any, any> | undefined,\n\tdefaultType: any;\n\nconst defaultParamRegex = /:((\\w|-)+)/g,\n\tslashRegex = /\\/\\//g,\n\treplaceSlash = (m: string, o: number): string => (o <= 6 ? m : '/');\n\nfunction isAPIInfoWithURL<ContentType, Meta>(v: any): v is APIInfoWithURL<ContentType, Meta> {\n\treturn !!v.url;\n}\n\nfunction parseApiInfo<RawRequestOptions, ContentType, Meta, Method extends HTTPMethodLowerCase>(\n\tname: string,\n\trawInfo: APIInfo<ContentType, Meta>,\n\t{\n\t\tbaseURL: gBaseURL,\n\t\tparamRegex,\n\t\tquerystring,\n\t\tclient\n\t}: {\n\tbaseURL?: string;\n\tparamRegex: RegExp;\n\tquerystring: Serialize2QueryString;\n\tclient: APIzClient<RawRequestOptions, ContentType, Meta, Method>;\n\t}\n): ParsedAPIInfo<RawRequestOptions, ContentType, Meta, Method> {\n\tconst {\n\t\tmethod = 'GET' as HTTPMethod,\n\t\ttype = defaultType as ContentType | undefined,\n\t\tmeta\n\t} = rawInfo;\n\tlet url: string | undefined, baseURL: string | undefined, path: string | undefined;\n\n\t// 照理讲放parseApiInfo外面显得更合理一点, 不过考虑到add和实例化的时候都要校验\n\tif (name === 'remove' || name === 'add') {\n\t\tthrow new Error('\"remove\" and \"add\" is preserved key.');\n\t}\n\n\tif (isAPIInfoWithURL<ContentType, Meta>(rawInfo)) {\n\t\turl = rawInfo.url;\n\t} else {\n\t\tbaseURL = rawInfo.baseURL;\n\t\tpath = rawInfo.path;\n\t}\n\n\tconst info = {} as ParsedAPIInfo<RawRequestOptions, ContentType, Meta, Method>,\n\t\tbURL = baseURL || gBaseURL;\n\n\tif (!isObj(rawInfo)) {\n\t\tthrow new TypeError(`API ${name} expected an object, but received ${JSON.stringify(rawInfo)}.`);\n\t}\n\tif (isStr(url)) {\n\t\tinfo.url = url;\n\t} else if (isStr(bURL)) {\n\t\tinfo.url = (bURL + (path || '')).replace(slashRegex, replaceSlash);\n\t} else {\n\t\tthrow new Error(`API \"${name}\" must set url or baseURL correctly.`);\n\t}\n\tconst methodUpperCase = method.toUpperCase() as HTTPMethodUpperCase,\n\t\tmethodLowerCase = method.toLowerCase() as Method;\n\tif (!['GET', 'HEAD', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS'].includes(methodUpperCase)) {\n\t\tthrow new Error(`Unsupported HTTP method: ${methodUpperCase}.`);\n\t}\n\tif (!isFn(client[methodLowerCase])) {\n\t\tthrow new Error(`client must implement a ${methodLowerCase} function.`);\n\t}\n\tconst parts = info.url.split(/\\/(?=\\w|:)/g),\n\t\toffset = /^(https?:|\\/)/.test(parts[0]) ? 2 : 1;\n\tinfo.baseURL = parts.slice(0, offset).join('/');\n\tinfo.path = `/${parts.slice(offset).join('/')}`;\n\tinfo.name = name;\n\tinfo.meta = meta;\n\tinfo.method = methodUpperCase;\n\tinfo.methodLowerCase = methodLowerCase;\n\tinfo.client = client;\n\tinfo.type = type;\n\tinfo.regex = paramRegex;\n\tinfo.querystring = querystring;\n\tinfo.init = true;\n\treturn info;\n}\n\nfunction replaceParams(params: Record<string, string>): (m: string, v: string) => string | never {\n\treturn (m: string, v: string): string | never => {\n\t\tif (params[v] == null) {\n\t\t\tthrow new Error(`Can't find a property \"${v}\" in params.`);\n\t\t}\n\t\treturn encodeURIComponent(params[v]);\n\t};\n}\n\nfunction request<RawRequestOptions, ContentType, Meta, Method extends HTTPMethodLowerCase>(\n\tthis: ParsedAPIInfo<RawRequestOptions, ContentType, Meta, Method>,\n\toptions?: APIzRequestOptions<ContentType> | RawRequestOptions,\n\tisRawOption?: boolean\n): Promise<any> {\n\t// $以区分全局变量\n\tconst {\n\t\tmethodLowerCase,\n\t\ttype: $defaultType,\n\t\tregex,\n\t\tquerystring,\n\t\tbaseURL,\n\t\tpath,\n\t\tclient,\n\t\tmeta\n\t} = this;\n\tlet qs,\n\t\t// tslint:disable-next-line\n\t\t{query, params, body, headers, type, handleError} = (options as APIzRequestOptions<ContentType> | undefined) || {} as APIzRequestOptions<ContentType>,\n\t\turl = this.url;\n\n\tif (isRawOption === true) {\n\t\treturn client[methodLowerCase]({\n\t\t\turl,\n\t\t\tname: this.name,\n\t\t\thandleError,\n\t\t\toptions: options as RawRequestOptions | undefined\n\t\t});\n\t}\n\n\t// GET, HEAD没有body没有content-type, 如果加上了content-type, 会破坏get默认为简单请求的\n\t// 行为, 从而导致跨域协商\n\t// tslint:disable-next-line\n\tif (type == undefined && methodLowerCase !== 'get' && methodLowerCase !== 'head') {\n\t\ttype = $defaultType;\n\t}\n\n\tif (params) {\n\t\turl = baseURL + path.replace(regex, replaceParams(params));\n\t}\n\n\tif (query) {\n\t\tqs = querystring(query);\n\t\turl = url.includes('?') ? `${url}&${qs}` : `${url}?${qs}`;\n\t}\n\n\treturn client[methodLowerCase]({\n\t\turl,\n\t\tname: this.name,\n\t\thandleError,\n\t\tmeta,\n\t\ttype,\n\t\tbody,\n\t\theaders,\n\t\tquery\n\t});\n}\n\nfunction createAPI<RawRequestOptions, ContentType, Meta, Method extends HTTPMethodLowerCase>(\n\tinfo: ParsedAPIInfo<RawRequestOptions, ContentType, Meta, Method>\n): APIzRequest<RawRequestOptions, ContentType, Meta> {\n\tconst fn = request.bind<Request<RawRequestOptions, ContentType, Meta, Method>>(info);\n\n\t['url', 'method', 'meta', 'type'].forEach((k: string) => {\n\t\tObject.defineProperty(fn, k, {\n\t\t\tvalue: (info as any)[k],\n\t\t\tenumerable: true,\n\t\t\twritable: false\n\t\t});\n\t});\n\treturn (fn as unknown) as APIzRequest<RawRequestOptions, ContentType, Meta>;\n}\n\nexport function APIz<\nRawRequestOptions = any,\nContentType = any,\nMeta = any,\nMethod extends HTTPMethodLowerCase = HTTPMethodLowerCase,\nT extends Record<string, APIInfo<ContentType, Meta>> = Record<string, APIInfo<ContentType, Meta>>\n>(\n\tgroup: APIGroup<T>,\n\toptions?: APIzOptions<RawRequestOptions, ContentType, Meta, Method>\n): APIzInstance<RawRequestOptions, T, Method> {\n\tlet baseURL: string | undefined,\n\t\timmutable: boolean | undefined,\n\t\tparamRegex: RegExp,\n\t\tquerystring: Serialize2QueryString | undefined,\n\t\tclient: APIzClient<RawRequestOptions, ContentType, Meta, Method> | undefined,\n\t\tapiInfoGroup = {} as Record<\n\t\t\tstring,\n\t\t\tParsedAPIInfo<RawRequestOptions, ContentType, Meta, Method> | APIInfo<ContentType, Meta>\n\t\t>;\n\n\tisStr(group.baseURL) && (baseURL = group.baseURL);\n\n\t({\n\t\tbaseURL = baseURL,\n\t\timmutable = globalIsArgsImmutable,\n\t\tparamRegex = globalParamRegex || defaultParamRegex,\n\t\t// 这里querystring虽然可能为undefined, 但是后面立马检测了是否为callable,\n\t\t// 为了给js用户提示, 所以这里也可以暂时视为不为undefined\n\t\tquerystring = globalQuerystring,\n\t\tclient = globalClient\n\t} = options || {});\n\n\tif (!isFn(querystring)) {\n\t\tthrow new Error('A querystring function must set.');\n\t}\n\n\tif (!client) {\n\t\tthrow new Error('A client must set.');\n\t}\n\n\tconst groupOptions = {\n\t\tbaseURL,\n\t\tparamRegex,\n\t\tquerystring,\n\t\tclient\n\t};\n\n\tconst apis = group.apis;\n\n\tif (immutable) {\n\t\tapiInfoGroup = apis || {};\n\t} else {\n\t\t// 不用Object.keys, 允许配置对象继承\n\t\tfor (const key in apis) {\n\t\t\t// tslint:disable-next-line\n\t\t\tif (isObj(apis[key])) {\n\t\t\t\tapiInfoGroup[key] = parseApiInfo<RawRequestOptions, ContentType, Meta, Method>(\n\t\t\t\t\tkey,\n\t\t\t\t\tapis[key],\n\t\t\t\t\tgroupOptions\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`The ${key} in meta is not an object.`);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst pxy = new Proxy(\n\t\t{},\n\t\t{\n\t\t\tget(target: object, key: string, receiver: APIzInstance<RawRequestOptions, T, Method>): any {\n\t\t\t\tif (!apiInfoGroup[key] || !isEnumerable(apiInfoGroup, key)) {\n\t\t\t\t\treturn Reflect.get(target, key);\n\t\t\t\t} else if (\n\t\t\t\t\t!(apiInfoGroup[key] as ParsedAPIInfo<RawRequestOptions, ContentType, Meta, Method>).init\n\t\t\t\t) {\n\t\t\t\t\tapiInfoGroup[key] = parseApiInfo<RawRequestOptions, ContentType, Meta, Method>(\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tapiInfoGroup[key],\n\t\t\t\t\t\tgroupOptions\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tconst apiFn = createAPI(apiInfoGroup[key] as ParsedAPIInfo<\n\t\t\t\t\tRawRequestOptions,\n\t\t\t\t\tContentType,\n\t\t\t\t\tMeta,\n\t\t\t\t\tMethod\n\t\t\t\t>);\n\t\t\t\tReflect.set(receiver, key, apiFn);\n\t\t\t\treturn apiFn;\n\t\t\t},\n\t\t\tgetPrototypeOf(): object {\n\t\t\t\treturn APIz.prototype;\n\t\t\t}\n\t\t}\n\t);\n\n\tconst self = Object.create(pxy) as APIzInstance<RawRequestOptions, T, Method>;\n\n\tself.remove = function (name: string): APIzInstance<RawRequestOptions, T, Method> {\n\t\tthis[name] && ((apiInfoGroup[name] as any) = (this[name] as any) = undefined);\n\t\treturn this;\n\t};\n\n\tself.add = function (\n\t\tname: string,\n\t\tapiInfo: APIInfo<ContentType, Meta>\n\t): APIzInstance<RawRequestOptions, T, Method> {\n\t\tif (apiInfoGroup[name]) {\n\t\t\tthrow new Error(`API \"${name}\" already exists.`);\n\t\t}\n\t\tapiInfoGroup[name] = parseApiInfo<RawRequestOptions, ContentType, Meta, Method>(\n\t\t\tname,\n\t\t\tapiInfo,\n\t\t\tgroupOptions\n\t\t);\n\t\t// 同前面一样存在运行时类型转换\n\t\t(this as any)[name] = createAPI(apiInfoGroup[name] as ParsedAPIInfo<\n\t\t\tRawRequestOptions,\n\t\t\tContentType,\n\t\t\tMeta,\n\t\t\tMethod\n\t\t>);\n\t\treturn this;\n\t};\n\n\treturn self;\n}\n\nexport function config<\nRawRequestOptions,\nContentType = any,\nMeta = any,\nMethod extends HTTPMethodLowerCase = HTTPMethodLowerCase\n>(\n\t{\n\t\tquerystring,\n\t\tparamRegex,\n\t\timmutable,\n\t\tclient,\n\t\treset,\n\t\tdefaultType: dt\n\t}: GlobalAPIzOptions<RawRequestOptions, ContentType, Meta, Method> = {reset: true}\n): void {\n\tisFn(querystring) && (globalQuerystring = querystring);\n\tparamRegex instanceof RegExp && (globalParamRegex = paramRegex);\n\tglobalIsArgsImmutable = immutable;\n\tglobalClient = client;\n\tdefaultType = dt;\n\treset &&\n\t\t((globalQuerystring = globalParamRegex = globalClient = defaultType = undefined),\n\t\t(globalIsArgsImmutable = false));\n}","import { Serialize2QueryString } from './core';\n\nexport const querystring: Serialize2QueryString = function (obj: any): string {\n\tif (Object.prototype.toString.call(obj) === '[object Object]') {\n\t\treturn Object.keys(obj)\n\t\t\t.map(\n\t\t\t\t(k: string) =>\n\t\t\t\t\tArray.isArray(obj[k])\n\t\t\t\t\t\t? obj[k]\n\t\t\t\t\t\t\t.map((v: any) => `${encodeURIComponent(k)}=${encodeURIComponent(v == null ? '' : v)}`)\n\t\t\t\t\t\t\t.join('&')\n\t\t\t\t\t\t: `${encodeURIComponent(k)}=${encodeURIComponent(obj[k] == null ? '' : obj[k])}`\n\t\t\t)\n\t\t\t.join('&');\n\t} else if (typeof obj === 'string') {\n\t\treturn obj;\n\t} else {\n\t\treturn JSON.stringify(obj);\n\t}\n};","import { config } from './core';\nimport { querystring } from './querystring';\n\nconfig({\n\tquerystring,\n\tdefaultType: 'json'\n});\n\nexport * from './core';"],"names":["toString","Map","call","bind","Object","prototype","isStr","s","isFn","f","isObj","o","isEnumerable","propertyIsEnumerable","globalQuerystring","globalParamRegex","globalIsArgsImmutable","globalClient","defaultType","defaultParamRegex","slashRegex","replaceSlash","m","isAPIInfoWithURL","v","url","parseApiInfo","name","rawInfo","baseURL","gBaseURL","paramRegex","querystring","client","method","type","meta","path","Error","info","bURL","TypeError","JSON","stringify","replace","methodUpperCase","toUpperCase","methodLowerCase","toLowerCase","includes","parts","split","offset","test","slice","join","regex","init","replaceParams","params","encodeURIComponent","request","options","isRawOption","$defaultType","qs","query","body","headers","handleError","undefined","createAPI","fn","forEach","k","defineProperty","value","enumerable","writable","APIz","group","immutable","apiInfoGroup","groupOptions","apis","key","console","warn","pxy","Proxy","get","target","receiver","Reflect","apiFn","set","getPrototypeOf","self","create","remove","add","apiInfo","config","reset","dt","RegExp","obj","keys","map","Array","isArray"],"mappings":"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"}
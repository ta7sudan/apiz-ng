/**
 * @Version 4.0.3
 * @Author: ta7sudan
 * @Repo: https://github.com/ta7sudan/apiz-ng#readme
 * @License: MIT
 */(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):(a=a||self,b(a.apizng={}))})(this,function(a){'use strict';function b(a){return!!a.url}function c(a,c,{baseURL:d,paramRegex:e,querystring:f,client:g}){const{method:i="GET",type:m=q,meta:h}=c;let n,o,p;if("remove"===a||"add"===a)throw new Error("\"remove\" and \"add\" is preserved key.");b(c)?n=c.url:(o=c.baseURL,p=c.path);const r={},s=o||d;if(!l(c))throw new TypeError(`API ${a} expected an object, but received ${JSON.stringify(c)}.`);if(j(n))r.url=n;else if(j(s))r.url=(s+(p||"")).replace(t,u);else throw new Error(`API "${a}" must set url or baseURL correctly.`);const v=i.toUpperCase(),w=i.toLowerCase();if(-1===["GET","HEAD","POST","PUT","PATCH","DELETE","OPTIONS"].indexOf(v))throw new Error(`Unsupported HTTP method: ${v}.`);if(!k(g[w]))throw new Error(`client must implement a ${w} function.`);const x=r.url.split(/\/(?=\w|:)/g),y=/^(https?:|\/)/.test(x[0])?2:1;return r.baseURL=x.slice(0,y).join("/"),r.path=`/${x.slice(y).join("/")}`,r.name=a,r.meta=h,r.method=v,r.methodLowerCase=w,r.client=g,r.type=m,r.regex=e,r.querystring=f,r.init=!0,r}function d(a){return(b,c)=>{if(null==a[c])throw new Error(`Can't find a property "${c}" in params.`);return encodeURIComponent(a[c])}}function e(a,b){const{methodLowerCase:c,type:e,regex:f,querystring:g,baseURL:h,path:i,client:j,meta:k}=this;let l,{query:m,params:n,body:o,headers:p,type:q,handleError:r}=a||{},s=this.url;return!0===b?j[c]({url:s,name:this.name,handleError:r,options:a}):(void 0===q&&(q=e),n&&(s=h+i.replace(f,d(n))),m&&(l=g(m),s=-1===s.indexOf("?")?`${s}?${l}`:`${s}&${l}`),j[c]({url:s,name:this.name,handleError:r,meta:k,type:q,body:o,headers:p,query:m}))}function f(a){const b=e.bind(a);return["url","method","meta","type"].forEach(c=>{Object.defineProperty(b,c,{value:a[c],enumerable:!0,writable:!1})}),b}function g(a,b){let d,e,h,i,q,t={};if(j(a.baseURL)&&(d=a.baseURL),({baseURL:d=d,immutable:e=r,paramRegex:h=o||s,querystring:i=n,client:q=p}=b||{}),!k(i))throw new Error("A querystring function must set.");if(!q)throw new Error("A client must set.");const u={baseURL:d,paramRegex:h,querystring:i,client:q},v=a.apis;if(e)t=v||{};else for(const a in v)l(v[a])?t[a]=c(a,v[a],u):console.warn(`The ${a} in meta is not an object.`);const w=new Proxy({},{get(a,b,d){if(!t[b]||!m(t,b))return Reflect.get(a,b);t[b].init||(t[b]=c(b,t[b],u));const e=f(t[b]);return Reflect.set(d,b,e),e},getPrototypeOf(){return g.prototype}}),x=Object.create(w);return x.remove=function(a){return this[a]&&(t[a]=this[a]=void 0),this},x.add=function(a,b){if(t[a])throw new Error(`API "${a}" already exists.`);return t[a]=c(a,b,u),this[a]=f(t[a]),this},x}function h({querystring:a,paramRegex:b,immutable:c,client:d,reset:e,defaultType:f}={reset:!0}){k(a)&&(n=a),b instanceof RegExp&&(o=b),r=c,p=d,q=f,e&&(n=o=p=q=void 0,r=!1)}const i=Map.call.bind(Object.prototype.toString),j=a=>a&&"string"==typeof a,k=a=>"function"==typeof a,l=a=>"[object Object]"===i(a),m=Map.call.bind(Object.prototype.propertyIsEnumerable);let n,o,p,q,r=!1;const s=/:((\w|-)+)/g,t=/\/\//g,u=(a,b)=>6>=b?a:"/";h({querystring:function(a){return"[object Object]"===Object.prototype.toString.call(a)?Object.keys(a).map(b=>Array.isArray(a[b])?a[b].map(a=>`${encodeURIComponent(b)}=${encodeURIComponent(null==a?"":a)}`).join("&"):`${encodeURIComponent(b)}=${encodeURIComponent(null==a[b]?"":a[b])}`).join("&"):"string"==typeof a?a:JSON.stringify(a)},defaultType:"json"}),a.APIz=g,a.config=h,Object.defineProperty(a,"__esModule",{value:!0})});
//# sourceMappingURL=apiz.min.js.map

/**
 * @Version 5.0.1
 * @Author: ta7sudan
 * @Repo: https://github.com/ta7sudan/apiz-ng#readme
 * @License: MIT
 */(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?b(exports):"function"==typeof define&&define.amd?define(["exports"],b):(a=a||self,b(a.apizng={}))})(this,function(a){'use strict';function b(a){return!!a.url}function c(a,c,{baseURL:d,paramRegex:e,querystring:f,client:g}){const{method:i="GET",contentType:m=q,responseType:n=r,meta:h}=c;let o,p,s;if("remove"===a||"add"===a)throw new Error("\"remove\" and \"add\" is preserved key.");b(c)?o=c.url:(p=c.baseURL,s=c.path);const t={},w=p||d;if(!l(c))throw new TypeError(`API ${a} expected an object, but received ${JSON.stringify(c)}.`);if(j(o))t.url=o;else if(j(w))t.url=(w+(s||"")).replace(u,v);else throw new Error(`API "${a}" must set url or baseURL correctly.`);const x=i.toUpperCase(),y=i.toLowerCase();if(-1===["GET","HEAD","POST","PUT","PATCH","DELETE","OPTIONS"].indexOf(x))throw new Error(`Unsupported HTTP method: ${x}.`);if(!k(g[y]))throw new Error(`client must implement a ${y} function.`);const z=t.url.split(/\/(?=\w|:)/g),A=/^(https?:|\/)/.test(z[0])?2:1;return t.baseURL=z.slice(0,A).join("/"),t.path=`/${z.slice(A).join("/")}`,t.name=a,t.meta=h,t.method=x,t.methodLowerCase=y,t.client=g,t.contentType=m,t.responseType=n,t.regex=e,t.querystring=f,t.init=!0,t}function d(a){return(b,c)=>{if(null==a[c])throw new Error(`Can't find a property "${c}" in params.`);return encodeURIComponent(a[c])}}function e(a,b){const{methodLowerCase:c,contentType:e,responseType:f,regex:g,querystring:h,baseURL:i,path:j,client:k,meta:l}=this;let m,{query:n,params:o,body:p,headers:q,contentType:r,responseType:s,handleError:t}=a||{},u=this.url;return!0===b?k[c]({url:u,name:this.name,method:this.method.toUpperCase(),handleError:t,options:a}):(null==r&&"get"!==c&&"head"!==c&&(r=e),null==s&&(s=f),o&&(u=i+j.replace(g,d(o))),n&&(m=h(n),u=-1===u.indexOf("?")?`${u}?${m}`:`${u}&${m}`),k[c]({url:u,name:this.name,method:this.method.toUpperCase(),handleError:t,meta:l,contentType:r,responseType:s,body:p,headers:q,query:n}))}function f(a){const b=e.bind(a);return["url","method","meta","type"].forEach(c=>{Object.defineProperty(b,c,{value:a[c],enumerable:!0,writable:!1})}),b}function g(a,b){let d,e,h,i,q,r={};if(j(a.baseURL)&&(d=a.baseURL),({baseURL:d=d,immutable:e=s,paramRegex:h=o||t,querystring:i=n,client:q=p}=b||{}),!k(i))throw new Error("A querystring function must set.");if(!q)throw new Error("A client must set.");const u={baseURL:d,paramRegex:h,querystring:i,client:q},v=a.apis;if(e)r=v||{};else for(const a in v)l(v[a])?r[a]=c(a,v[a],u):console.warn(`The ${a} in meta is not an object.`);const w=new Proxy({},{get(a,b,d){if(!r[b]||!m(r,b))return Reflect.get(a,b);r[b].init||(r[b]=c(b,r[b],u));const e=f(r[b]);return Reflect.set(d,b,e),e},getPrototypeOf(){return g.prototype}}),x=Object.create(w);return x.remove=function(a){return this[a]&&(r[a]=this[a]=void 0),this},x.add=function(a,b){if(r[a])throw new Error(`API "${a}" already exists.`);return r[a]=c(a,b,u),this[a]=f(r[a]),this},x}function h({querystring:a,paramRegex:b,immutable:c,client:d,reset:e,defaultContentType:f,defaultResponseType:g}={reset:!0}){k(a)&&(n=a),b instanceof RegExp&&(o=b),s=c,p=d,q=f,r=g,e&&(n=o=p=q=r=void 0,s=!1)}const i=Map.call.bind(Object.prototype.toString),j=a=>a&&"string"==typeof a,k=a=>"function"==typeof a,l=a=>"[object Object]"===i(a),m=Map.call.bind(Object.prototype.propertyIsEnumerable);let n,o,p,q,r,s=!1;const t=/:((\w|-)+)/g,u=/\/\//g,v=(a,b)=>6>=b?a:"/",w=function(a){return"[object Object]"===Object.prototype.toString.call(a)?Object.keys(a).map(b=>Array.isArray(a[b])?a[b].map(a=>`${encodeURIComponent(b)}=${encodeURIComponent(null==a?"":a)}`).join("&"):`${encodeURIComponent(b)}=${encodeURIComponent(null==a[b]?"":a[b])}`).join("&"):"string"==typeof a?a:JSON.stringify(a)};h({querystring:w,defaultContentType:"json",defaultResponseType:"json"}),a.APIz=g,a.config=h,a.querystring=w,Object.defineProperty(a,"__esModule",{value:!0})});
//# sourceMappingURL=apiz.min.js.map
